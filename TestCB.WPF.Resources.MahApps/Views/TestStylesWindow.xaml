<mah:MetroWindow x:Class="TestMahAppsResources.Views.TestStylesWindow"
                 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                 xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
                 xmlns:dvm="clr-namespace:TestMahAppsResources.DesignViewModels"
                 xmlns:xaml="http://wpf.cb.com/xaml"
                 xmlns:models="clr-namespace:TestMahAppsResources.Models"
                 xmlns:sys="clr-namespace:System;assembly=mscorlib"
                 xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                 xmlns:prm="http://prismlibrary.com/"
                 xmlns:ema="clr-namespace:CB.WPF.ExtendedMahApps;assembly=CB.WPF.ExtendedMahApps"
                 mc:Ignorable="d"
                 Title="Test Styles" Height="640" Width="960" FontSize="13" WindowState="Maximized"
                 WindowStartupLocation="CenterOwner" Style="{StaticResource MetroWindowStyle}">

    <Window.Resources>
        <dvm:DesignTestStylesViewModel x:Key="MainViewModel" />

        <sys:Double x:Key="ImageSize">28</sys:Double>

        <xaml:BooleanNotConverter x:Key="NotConverter" />

        <xaml:BooleanToValueConverter x:Key="BoolToSexConverter" ValueIfFalse="Female" ValueIfTrue="Male" />

        <xaml:BooleanToValueConverter x:Key="BoolToMarriageStateConverter" ValueIfFalse="Single" ValueIfTrue="Married" />

        <xaml:NullityConverter x:Key="NullToBooleanConverter">
            <xaml:NullityConverter.ValueWhenNull>
                <sys:Boolean>True</sys:Boolean>
            </xaml:NullityConverter.ValueWhenNull>
            <xaml:NullityConverter.ValueWhenNotNull>
                <sys:Boolean>False</sys:Boolean>
            </xaml:NullityConverter.ValueWhenNotNull>
        </xaml:NullityConverter>

        <xaml:GeneralValueConverter x:Key="ProgressStateToVisibilityConverter">
            <xaml:GeneralValueConverter.DefaultConvertResult>
                <Visibility>Collapsed</Visibility>
            </xaml:GeneralValueConverter.DefaultConvertResult>

            <xaml:GeneralValueConverter.ConvertMapping>
                <xaml:GeneralDictionary>
                    <Visibility x:Key="{x:Static models:ProgressState.Running}">Visible</Visibility>
                </xaml:GeneralDictionary>
            </xaml:GeneralValueConverter.ConvertMapping>
        </xaml:GeneralValueConverter>

        <DataTemplate x:Key="AvatarColumn" DataType="models:Person">
            <mah:RevealImage Image="{Binding AvatarUrl}" Height="{StaticResource ImageSize}"
                             Width="{StaticResource ImageSize}" />
        </DataTemplate>

        <DataTemplate x:Key="NameColumn" DataType="models:Person">
            <TextBlock Text="{Binding Name}" Style="{StaticResource TextBlockStyle.Center}" />
        </DataTemplate>

        <DataTemplate x:Key="BirthDateColumn" DataType="models:Person">
            <TextBlock Text="{Binding DateOfBirth, StringFormat={}{0:MM-dd-yyyy}}"
                       Style="{StaticResource TextBlockStyle.Center}" />
        </DataTemplate>

        <DataTemplate x:Key="SexColumn" DataType="models:Person">
            <TextBlock Text="{Binding IsMale, Converter={StaticResource BoolToSexConverter}}"
                       Style="{StaticResource TextBlockStyle.Center}" />
        </DataTemplate>

        <DataTemplate x:Key="MarriageColumn" DataType="models:Person">
            <TextBlock Text="{Binding IsMarried, Converter={StaticResource BoolToMarriageStateConverter}}"
                       Style="{StaticResource TextBlockStyle.Center}" />
        </DataTemplate>

        <DataTemplate x:Key="ReligionColumn" DataType="models:Person">
            <TextBlock Text="{Binding Religion}" Style="{StaticResource TextBlockStyle.Center}" />
        </DataTemplate>

        <DataTemplate x:Key="IqColumn" DataType="models:Person">
            <TextBlock Text="{Binding IntelligeceQuotient}" Style="{StaticResource TextBlockStyle.Center}" />
        </DataTemplate>

        <DataTemplate x:Key="IncomeColumn" DataType="models:Person">
            <TextBlock Text="{Binding Income}" Style="{StaticResource TextBlockStyle.Center}" />
        </DataTemplate>

        <ControlTemplate x:Key="BackgroundMenuItemTemplate" TargetType="MenuItem">
            <Rectangle Height="60" Width="96" Margin="{StaticResource NormalMargin}"
                       ema:MahAppsBackgroundServices.BackgroundProperty="{x:Static Shape.FillProperty}"
                       ema:MahAppsBackgroundServices.BackgroundPath="{Binding}" />
        </ControlTemplate>

        <!--<ControlTemplate x:Key="AccentMenuItemTemplate" TargetType="MenuItem">
            <StackPanel Orientation="Horizontal" d:DataContext="{d:DesignInstance res:Accent}">
                <Ellipse Height="16" Width="16" Fill="{Binding AccentBrush}"
                         Margin="{StaticResource NormalMargin}" />
                <TextBlock Text="{Binding Name}" Style="{StaticResource TextBlockStyle.Label}" />
            </StackPanel>
        </ControlTemplate>

        <ControlTemplate x:Key="AppThemeMenuItemTemplate" TargetType="MenuItem">
            <StackPanel Orientation="Horizontal" d:DataContext="{d:DesignInstance res:AppTheme}">
                <Ellipse Height="16" Width="16" StrokeThickness="2"
                         Fill="{Binding Background}" Stroke="{Binding BorderBrush}"
                         Margin="{StaticResource NormalMargin}" />
                <TextBlock Text="{Binding Name}" Style="{StaticResource TextBlockStyle.Label}" />
            </StackPanel>
        </ControlTemplate>

        <Style x:Key="MahAppsThemeMenuItemStyle" TargetType="MenuItem" BasedOn="{StaticResource MenuItemStyle}">
            <Setter Property="CommandParameter" Value="{Binding (res:MahAppsTheme.Name)}" />
        </Style>

        <Style x:Key="AppThemeMenuItemStyle" TargetType="MenuItem" BasedOn="{StaticResource MahAppsThemeMenuItemStyle}">
            <Setter Property="Command" Value="{x:Static res:MahAppsThemeManager.ChangeAppThemeCommand}" />
            <Setter Property="Template" Value="{StaticResource AppThemeMenuItemTemplate}" />
        </Style>

        <Style x:Key="AccentMenuItemStyle" TargetType="MenuItem" BasedOn="{StaticResource MahAppsThemeMenuItemStyle}">
            <Setter Property="Command" Value="{x:Static res:MahAppsThemeManager.ChangeAccentCommand}" />
            <Setter Property="Template" Value="{StaticResource AccentMenuItemTemplate}" />
        </Style>-->

        <Style x:Key="BackgroundMenuItemStyle" TargetType="MenuItem" BasedOn="{StaticResource MenuItemStyle}">
            <Setter Property="Command"
                    Value="{Binding Source={StaticResource MainViewModel}, Path=SelectBackgroundCommand}" />
            <Setter Property="CommandParameter" Value="{Binding}" />
            <Setter Property="Template" Value="{StaticResource BackgroundMenuItemTemplate}" />
        </Style>
    </Window.Resources>

    <Window.DataContext>
        <StaticResource ResourceKey="MainViewModel" />
    </Window.DataContext>

    <ema:MahAppsBackgroundServices.BackgroundPath>
        <Binding Path="SelectedBackground" />
    </ema:MahAppsBackgroundServices.BackgroundPath>

    <i:Interaction.Triggers>
        <prm:InteractionRequestTrigger SourceObject="{Binding FileRequest}">
            <xaml:WindowTriggerAction CenterOverAssociatedObject="True" IsModal="True" />
        </prm:InteractionRequestTrigger>
    </i:Interaction.Triggers>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Menu Grid.Row="0">
            <MenuItem Style="{StaticResource AppThemeMenuItemStyle}" />

            <MenuItem Style="{StaticResource AccentMenuItemStyle}" />

            <MenuItem Header="Background" ItemContainerStyle="{StaticResource BackgroundMenuItemStyle}"
                      ItemsSource="{Binding BackgroundFiles}" />
        </Menu>

        <DataGrid x:Name="datPeople" Grid.Row="1" AutoGenerateColumns="False"
                  ItemsSource="{Binding People}"
                  SelectedItem="{Binding SelectedPerson}">
            <DataGrid.Columns>
                <DataGridTemplateColumn Header="Avatar" CellTemplate="{StaticResource AvatarColumn}" />
                <DataGridTemplateColumn Header="Name" CellTemplate="{StaticResource NameColumn}" />
                <DataGridTemplateColumn Header="Birth Date" CellTemplate="{StaticResource BirthDateColumn}" />
                <DataGridTemplateColumn Header="Sex" CellTemplate="{StaticResource SexColumn}" />
                <DataGridTemplateColumn Header="Marriage" CellTemplate="{StaticResource MarriageColumn}" />
                <DataGridTemplateColumn Header="Religion" CellTemplate="{StaticResource ReligionColumn}" />
                <DataGridTemplateColumn Header="IQ" CellTemplate="{StaticResource IqColumn}" />
                <DataGridTemplateColumn Header="Income" CellTemplate="{StaticResource IncomeColumn}" />
            </DataGrid.Columns>
        </DataGrid>

        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <mah:ToggleSwitch Grid.Column="0" Width="120" OnLabel="Read-only" OffLabel="Editable"
                              IsChecked="{Binding ElementName=datPeople, Path=IsReadOnly}"
                              Style="{StaticResource ToggleSwitchStyle.Win10}" />

            <mah:SplitButton Grid.Column="2"
                             ItemsSource="{Binding Commands}" SelectedItem="{Binding SelectedCommand}"
                             Command="{Binding DoAsyncCommand}" />
        </Grid>

        <Grid Grid.Row="3" DataContext="{Binding SelectedPerson}"
              IsEnabled="{Binding Source={StaticResource MainViewModel}, Path=CanEdit}">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <TextBlock Grid.Row="0" Grid.Column="0" Text="Name:"
                       Style="{StaticResource TextBlockStyle.Label}" />
            <TextBox Grid.Row="0" Grid.Column="1"
                     Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" />

            <TextBlock Grid.Row="0" Grid.Column="2" Text="Birthday:"
                       Style="{StaticResource TextBlockStyle.Label}" />
            <DatePicker Grid.Row="0" Grid.Column="3"
                        SelectedDate="{Binding DateOfBirth}" />

            <Grid Grid.Row="0" Grid.Column="4">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Column="0" Text="Sex:"
                           Style="{StaticResource TextBlockStyle.Label}" />

                <RadioButton Grid.Column="1" Content="Female"
                             IsChecked="{Binding IsMale, Converter={StaticResource NotConverter}}" />

                <RadioButton Grid.Column="2" Content="Male"
                             IsChecked="{Binding IsMale, Mode=OneWay}" />
            </Grid>

            <CheckBox Grid.Row="0" Grid.Column="5" Content="Is Married?"
                      IsChecked="{Binding IsMarried}" />

            <TextBlock Grid.Row="1" Grid.Column="0" Text="Religion:"
                       Style="{StaticResource TextBlockStyle.Label}" />
            <ComboBox Grid.Row="1" Grid.Column="1"
                      ItemsSource="{xaml:EnumValues {x:Type models:Religion}}"
                      SelectedItem="{Binding Religion}" />

            <TextBlock Grid.Row="1" Grid.Column="2" Text="Income:"
                       Style="{StaticResource TextBlockStyle.Label}" />
            <mah:NumericUpDown Grid.Row="1" Grid.Column="3"
                               Value="{Binding Income}" />

            <Grid Grid.Row="1" Grid.Column="4">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Column="0" Text="IQ:"
                           Style="{StaticResource TextBlockStyle.Label}" />
                <Slider Grid.Column="1" Minimum="0" Maximum="300" TickFrequency="1"
                        Style="{StaticResource FlatSliderStyle}"
                        Value="{Binding IntelligeceQuotient}" />
            </Grid>

            <Grid Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="6">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Column="0" Text="Avatar:"
                           Style="{StaticResource TextBlockStyle.Label}" />

                <mah:RevealImage Grid.Column="1" Height="60" Width="60" VerticalAlignment="Stretch"
                                 Image="{Binding AvatarUrl}" />

                <TextBlock Grid.Column="2" Style="{StaticResource TextBlockStyle.Label}"
                           Text="{Binding AvatarUrl}" ToolTip="{Binding AvatarUrl}" />

                <Button Grid.Column="3" Style="{StaticResource IconButtonStyle}"
                        ema:MahAppsContentControlServices.IconVisual="{DynamicResource appbar_page_solid_add}"
                        Command="{Binding Source={StaticResource MainViewModel}, Path=BrowseAvatarCommand}" />
            </Grid>
        </Grid>

        <ProgressBar x:Name="prgMain" Grid.Row="4"
                     Value="{Binding Progress, Mode=OneWay}"
                     Visibility="{Binding State, Converter={StaticResource ProgressStateToVisibilityConverter}}"
                     IsIndeterminate="{Binding Progress, Mode=OneWay, Converter={StaticResource NullToBooleanConverter}}" />

        <mah:ProgressRing Grid.Row="0" Grid.RowSpan="7"
                          Visibility="{Binding State, Converter={StaticResource ProgressStateToVisibilityConverter}}" />

        <!--For Debug Only-->
        <!--<TextBlock Grid.Row="5" Text="{Binding ElementName=prgMain, Path=IsIndeterminate}" />-->
    </Grid>
</mah:MetroWindow>